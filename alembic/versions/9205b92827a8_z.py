"""z

Revision ID: 9205b92827a8
Revises: 
Create Date: 2024-11-13 09:42:02.613368

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9205b92827a8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('giveaways',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sponsor_links', sa.Text(), nullable=False),
    sa.Column('end_type', sa.String(), nullable=False),
    sa.Column('end_value', sa.Integer(), nullable=False),
    sa.Column('prize_places', sa.Integer(), nullable=False),
    sa.Column('ticket_rewards', sa.Integer(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournaments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('CUSTOM', 'TDM', 'METRO', name='tournamenttype'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price_in_tickets', sa.Integer(), nullable=False),
    sa.Column('total_slots', sa.Integer(), nullable=False),
    sa.Column('reward_first_place', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('group_link', sa.String(), nullable=False),
    sa.Column('group_id', sa.String(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tournaments_type'), 'tournaments', ['type'], unique=False)
    op.create_table('users',
    sa.Column('tg_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('fio', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('pubg_id', sa.BigInteger(), nullable=False),
    sa.Column('ticket_balance', sa.Integer(), nullable=False),
    sa.Column('invited_tg_id', sa.BigInteger(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['invited_tg_id'], ['users.tg_id'], ),
    sa.PrimaryKeyConstraint('tg_id')
    )
    op.create_index(op.f('ix_users_pubg_id'), 'users', ['pubg_id'], unique=True)
    op.create_index(op.f('ix_users_tg_id'), 'users', ['tg_id'], unique=True)
    op.create_table('giveaway_participation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('giveaway_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['giveaway_id'], ['giveaways.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.tg_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket_purchases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('price_per_ticket', sa.Float(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.tg_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_participation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.tg_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tournament_participation')
    op.drop_table('ticket_purchases')
    op.drop_table('giveaway_participation')
    op.drop_index(op.f('ix_users_tg_id'), table_name='users')
    op.drop_index(op.f('ix_users_pubg_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tournaments_type'), table_name='tournaments')
    op.drop_table('tournaments')
    op.drop_table('giveaways')
    # ### end Alembic commands ###
